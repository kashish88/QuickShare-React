{"ast":null,"code":"var _jsxFileName = \"/Users/kashish/Documents/Instagram_Clone-React/src/Post.js\";\nimport React, { useState, useEffect } from 'react';\nimport './Post.css';\nimport Avatar from '@material-ui/core/Avatar';\nimport { db } from './firebase';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n\nfunction Post({\n  postId,\n  user,\n  username,\n  caption,\n  imageUrl,\n  userId\n}) {\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState('');\n  const [likes, setLikes] = useState(0);\n  const [liked, setLiked] = useState(false);\n  useEffect(() => {\n    let unsubscribeComments;\n    let unsubscribeLikes;\n\n    if (postId) {\n      // Fetch comments\n      unsubscribeComments = db.collection('posts').doc(postId).collection('comments').onSnapshot(snapshot => {\n        setComments(snapshot.docs.map(doc => ({ ...doc.data(),\n          commentId: doc.id\n        })));\n      }); // Fetch likes\n\n      unsubscribeLikes = db.collection('posts').doc(postId).collection('likes').onSnapshot(snapshot => {\n        setLikes(snapshot.size);\n      }); // Check if the current user has liked the post\n\n      if (user) {\n        db.collection('posts').doc(postId).collection('likes').doc(user.uid).get().then(doc => {\n          setLiked(doc.exists);\n        });\n      }\n    }\n\n    return () => {\n      unsubscribeComments && unsubscribeComments();\n      unsubscribeLikes && unsubscribeLikes();\n    };\n  }, [postId, user]);\n\n  const postComment = event => {\n    event.preventDefault();\n    db.collection('posts').doc(postId).collection('comments').add({\n      text: comment,\n      username: user.displayName\n    });\n    setComment('');\n  };\n\n  const handleLike = () => {\n    const likeRef = db.collection('posts').doc(postId).collection('likes').doc(user.uid);\n\n    if (liked) {\n      likeRef.delete();\n    } else {\n      likeRef.set({\n        timestamp: new Date()\n      });\n    }\n\n    setLiked(!liked);\n  };\n\n  const deleteComment = commentId => {\n    db.collection('posts').doc(postId).collection('comments').doc(commentId).delete().then(() => {\n      console.log('Comment deleted successfully');\n    }).catch(error => {\n      console.error('Error deleting comment:', error);\n    });\n  };\n\n  const handleDelete = () => {\n    db.collection('posts').doc(postId).delete().then(() => {\n      console.log('Successfully deleted');\n    }).catch(error => {\n      console.log('Error removing', error);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post_header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: \"post_avatar\",\n    alt: username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, username), /*#__PURE__*/React.createElement(DeleteIcon, {\n    className: \"d\",\n    onClick: handleDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"post_image\",\n    src: imageUrl,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"post_text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, username), \" \", caption), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post_actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleLike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FavoriteIcon, {\n    color: liked ? 'secondary' : 'default',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, likes, \" likes\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post_comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, comments.map(comment => /*#__PURE__*/React.createElement(\"div\", {\n    key: comment.commentId,\n    className: \"comment_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, comment.username), \" \", comment.text), user && user.uid === userId && /*#__PURE__*/React.createElement(DeleteIcon, {\n    onClick: () => deleteComment(comment.commentId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }, \"Delete\")))), user && /*#__PURE__*/React.createElement(\"form\", {\n    className: \"post_commentBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"post_input\",\n    type: \"text\",\n    placeholder: \"Add a comment..\",\n    value: comment,\n    onChange: e => setComment(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"post_button\",\n    disabled: !comment,\n    type: \"submit\",\n    onClick: postComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, \"Post\")));\n}\n\nexport default Post;","map":{"version":3,"sources":["/Users/kashish/Documents/Instagram_Clone-React/src/Post.js"],"names":["React","useState","useEffect","Avatar","db","DeleteIcon","FavoriteIcon","Post","postId","user","username","caption","imageUrl","userId","comments","setComments","comment","setComment","likes","setLikes","liked","setLiked","unsubscribeComments","unsubscribeLikes","collection","doc","onSnapshot","snapshot","docs","map","data","commentId","id","size","uid","get","then","exists","postComment","event","preventDefault","add","text","displayName","handleLike","likeRef","delete","set","timestamp","Date","deleteComment","console","log","catch","error","handleDelete","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Post.css';\nimport Avatar from '@material-ui/core/Avatar';\nimport { db } from './firebase';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n\nfunction Post({ postId, user, username, caption, imageUrl, userId }) {\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState('');\n  const [likes, setLikes] = useState(0);\n  const [liked, setLiked] = useState(false);\n\n  useEffect(() => {\n    let unsubscribeComments;\n    let unsubscribeLikes;\n\n    if (postId) {\n      // Fetch comments\n      unsubscribeComments = db\n        .collection('posts')\n        .doc(postId)\n        .collection('comments')\n        .onSnapshot((snapshot) => {\n          setComments(snapshot.docs.map((doc) => ({ ...doc.data(), commentId: doc.id })));\n        });\n\n      // Fetch likes\n      unsubscribeLikes = db\n        .collection('posts')\n        .doc(postId)\n        .collection('likes')\n        .onSnapshot((snapshot) => {\n          setLikes(snapshot.size);\n        });\n\n      // Check if the current user has liked the post\n      if (user) {\n        db.collection('posts')\n          .doc(postId)\n          .collection('likes')\n          .doc(user.uid)\n          .get()\n          .then((doc) => {\n            setLiked(doc.exists);\n          });\n      }\n    }\n\n    return () => {\n      unsubscribeComments && unsubscribeComments();\n      unsubscribeLikes && unsubscribeLikes();\n    };\n  }, [postId, user]);\n\n  const postComment = (event) => {\n    event.preventDefault();\n    db.collection('posts').doc(postId).collection('comments').add({\n      text: comment,\n      username: user.displayName,\n    });\n    setComment('');\n  };\n\n  const handleLike = () => {\n    const likeRef = db.collection('posts').doc(postId).collection('likes').doc(user.uid);\n\n    if (liked) {\n      likeRef.delete();\n    } else {\n      likeRef.set({\n        timestamp: new Date(),\n      });\n    }\n\n    setLiked(!liked);\n  };\n\n  const deleteComment = (commentId) => {\n    db.collection('posts')\n      .doc(postId)\n      .collection('comments')\n      .doc(commentId)\n      .delete()\n      .then(() => {\n        console.log('Comment deleted successfully');\n      })\n      .catch((error) => {\n        console.error('Error deleting comment:', error);\n      });\n  };\n\n  const handleDelete = () => {\n    db.collection('posts')\n      .doc(postId)\n      .delete()\n      .then(() => {\n        console.log('Successfully deleted');\n      })\n      .catch((error) => {\n        console.log('Error removing', error);\n      });\n  };\n\n  return (\n    <div className=\"post\">\n      <div className=\"post_header\">\n        <Avatar className=\"post_avatar\" alt={username}></Avatar>\n        <h3>{username}</h3>\n        <DeleteIcon className=\"d\" onClick={handleDelete} />\n      </div>\n      <img className=\"post_image\" src={imageUrl} alt=\"\"></img>\n      <h4 className=\"post_text\">\n        <strong>{username}</strong> {caption}\n      </h4>\n      <div className=\"post_actions\">\n        <button onClick={handleLike}>\n          <FavoriteIcon color={liked ? 'secondary' : 'default'} />\n        </button>\n        <span>{likes} likes</span>\n      </div>\n      <div className=\"post_comments\">\n        {comments.map((comment) => (\n          <div key={comment.commentId} className=\"comment_container\">\n            <p>\n              <strong>{comment.username}</strong> {comment.text}\n            </p>\n            {user && user.uid === userId && (\n              <DeleteIcon onClick={() => deleteComment(comment.commentId)}>\n                Delete\n              </DeleteIcon>\n            )}\n          </div>\n        ))}\n      </div>\n      {user && (\n        <form className=\"post_commentBox\">\n          <input\n            className=\"post_input\"\n            type=\"text\"\n            placeholder=\"Add a comment..\"\n            value={comment}\n            onChange={(e) => setComment(e.target.value)}\n          />\n          <button\n            className=\"post_button\"\n            disabled={!comment}\n            type=\"submit\"\n            onClick={postComment}\n          >\n            Post\n          </button>\n        </form>\n      )}\n    </div>\n  );\n}\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}